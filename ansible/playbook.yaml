- name: Ensure hosts are reachable
  hosts: all
  gather_facts: false

  tasks:
  - name: Wait for system to become reachable
    wait_for_connection:

- name: Update Amazon Linux packages
  hosts: all
  become: true
  gather_facts: true

  tasks:
  - name: Update all packages to the latest version
    yum:
      name: '*'
      state: latest

- name: Install WireGuard and configure basic server
  hosts: all
  become: true

  tasks:
  - name: Install WireGuard package
    yum:
      name: wireguard-tools
      state: present

  - name: Install iptables package
    yum:
      name: iptables-services
      state: present

  - name: Load WireGuard kernel module
    modprobe:
      name: wireguard
    become: true

  - name: Ensure WireGuard module is loaded on boot
    modprobe:
      name: wireguard
      state: present
    become: true

  - name: Generate WireGuard server keys
    command: "wg genkey"
    register: server_private_key
    changed_when: false

  - name: Generate WireGuard server public key
    shell: "echo {{ server_private_key.stdout }} | wg pubkey"
    register: server_public_key
    changed_when: false

  - name: Generate WireGuard client keys
    command: "wg genkey"
    register: client_private_key
    changed_when: false

  - name: Generate WireGuard client public key
    shell: "echo {{ client_private_key.stdout }} | wg pubkey"
    register: client_public_key
    changed_when: false

  - name: Create WireGuard server configuration file
    template:
      src: ../templates/wireguard-server.conf.j2
      dest: /etc/wireguard/wg0.conf
      owner: root
      group: root
      mode: '0600'
    notify:
    - Start WireGuard

  - name: Save client private key to a file
    copy:
      dest: /etc/wireguard/client_private_key.txt
      content: "{{ client_private_key.stdout }}"
      owner: root
      group: root
      mode: '0400'

  - name: Save server public key to a file
    copy:
      dest: /etc/wireguard/server_public_key.txt
      content: "{{ server_public_key.stdout }}"
      owner: root
      group: root
      mode: '0400'

  - name: Fetch server IP address
    command: "curl -s ipinfo.io/ip"
    register: server_ip
    changed_when: false

  - name: Create WireGuard client configuration file
    template:
      src: ../templates/client.conf.j2
      dest: /etc/wireguard/client.conf
      owner: root
      group: root
      mode: '0600'

  - name: Fetch client configuration file
    fetch:
      src: /etc/wireguard/client.conf
      dest: ../out/client.conf
      flat: true

  - name: Enable IP forwarding
    sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      sysctl_set: true
      state: present
      reload: true

  - name: Allow new incoming SYN packets on TCP port 22 (SSH)
    ansible.builtin.iptables:
      chain: INPUT
      protocol: tcp
      destination_port: 22
      ctstate: NEW
      syn: match
      jump: ACCEPT
      comment: Accept new SSH connections.
    become: true

  - name: Save iptables rules
    service:
      name: iptables
      state: started
      enabled: yes

  handlers:
  - name: Start WireGuard
    service:
      name: "wg-quick@wg0"
      state: started
      enabled: yes
